<?xml version='1.0' encoding='UTF-8'?>
<OBJECT>
  <HIDDENTEXT>
    <PAGECOLUMN>
      <REGION>
        <PARAGRAPH>
          <LINE>
            <WORD coords="79,119,1619,80">To go from city "A" to city B", there can be many ways of accomplishing this: by flight, by bus,</WORD>
          </LINE>
          <LINE>
            <WORD coords="79,163,1619,131">by train and also by bicycle.Depending on the availability and convenience, we choose the one</WORD>
          </LINE>
          <LINE>
            <WORD coords="79,209,1619,176">that suits us. Similarly, in computer science, multiple algorithms are available for solving the</WORD>
          </LINE>
          <LINE>
            <WORD coords="74,257,1621,220">same problem (for example, a sorting problem has many algorithms, like insertion sort, selection.</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,305,1621,266">sort, quick sort and many more). Algorithm analysis helps us to determine which algorithm is</WORD>
          </LINE>
          <LINE>
            <WORD coords="72,351,889,309">most efficient in terms of time and space consumed.</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,490,822,451">1.7 Goal of the Analysis of Algorithms</WORD>
          </LINE>
          <LINE>
            <WORD coords="81,584,1624,552">The goal of the analysis of algorithms is to compare algorithms (or solutions) mainly in terms of</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,632,1379,600">running time but also in terms of other factors (e.g., memory, developer effort, etc.)</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,781,788,736">1.8 What is Running Time Analysis?</WORD>
          </LINE>
          <LINE>
            <WORD coords="79,871,1617,839">It is the process of determining how processing time increases as the size of the problem (inpu</WORD>
          </LINE>
          <LINE>
            <WORD coords="74,919,1621,882">size) increases. Input size is the number of elements in the input, and depending on the problem.</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,969,1446,930">type, the input may be of different types. The following are the common types of inputs.</WORD>
          </LINE>
          <LINE>
            <WORD coords="277,1031,534,997">Size of an array</WORD>
          </LINE>
          <LINE>
            <WORD coords="279,1082,580,1043">Polynomial degree</WORD>
          </LINE>
          <LINE>
            <WORD coords="279,1123,778,1091">Number of elements in a matrix</WORD>
          </LINE>
          <LINE>
            <WORD coords="275,1176,1150,1132">Number of bits in the binary representation of the input</WORD>
          </LINE>
          <LINE>
            <WORD coords="277,1217,746,1183">Vertices and edges in a graph.</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,1363,723,1320">1.9 How to Compare Algorithms</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,1455,1076,1416">To compare algorithms, let us define a few objective measures:</WORD>
          </LINE>
          <LINE>
            <WORD coords="79,1547,1582,1515">Execution times? Not a good measure as execution times are specific to a particular computer</WORD>
          </LINE>
          <LINE>
            <WORD coords="74,1639,1621,1602">Number of statements executed? Not a good measure, since the number of statements varies</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,1689,1363,1650">with the programming language as well as the style of the individual programmer.</WORD>
          </LINE>
          <LINE>
            <WORD coords="72,1781,1624,1737">Ideal solution? Let us assume that we express the running time of a given algorithm as a function</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,1826,1624,1788">of the input size n (i.e., f(n)) and compare these different functions corresponding to running.</WORD>
          </LINE>
          <LINE>
            <WORD coords="74,1875,1448,1836">times. This kind of comparison is independent of machine time, programming style, etc.</WORD>
          </LINE>
          <LINE>
            <WORD coords="79,2014,670,1975">1.10 What is Rate of Growth?</WORD>
          </LINE>
          <LINE>
            <WORD coords="79,2108,1617,2076">The rate at which the running time increases as a function of input is called rate of qrowth. Let us</WORD>
          </LINE>
        </PARAGRAPH>
      </REGION>
    </PAGECOLUMN>
  </HIDDENTEXT>
</OBJECT>
