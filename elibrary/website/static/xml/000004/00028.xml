<?xml version='1.0' encoding='UTF-8'?>
<OBJECT>
  <HIDDENTEXT>
    <PAGECOLUMN>
      <REGION>
        <PARAGRAPH>
          <LINE>
            <WORD coords="81,119,885,87">1.16 Theta-O Notation [Order Function].</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,213,427,174">Rate of Growth</WORD>
          </LINE>
          <LINE>
            <WORD coords="958,301,1100,245">c2g(n)</WORD>
          </LINE>
          <LINE>
            <WORD coords="959,433,1069,374">f(n)</WORD>
          </LINE>
          <LINE>
            <WORD coords="1305,594,1453,536">c1g(n)</WORD>
          </LINE>
          <LINE>
            <WORD coords="547,937,564,910">-</WORD>
          </LINE>
          <LINE>
            <WORD coords="1317,1043,1624,997">Input Size,n</WORD>
          </LINE>
          <LINE>
            <WORD coords="510,1072,573,1024">no</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,1155,1621,1116">This notation decides whether the upper and lower bounds of a given function (algorithm) are the</WORD>
          </LINE>
          <LINE>
            <WORD coords="72,1201,1624,1164">same. The average running time of an algorithm is always between the lower bound and the upper.</WORD>
          </LINE>
          <LINE>
            <WORD coords="69,1249,1624,1205">bound. If the upper bound (O) and lower bound (Q) give the same result, then the O notation will.</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,1295,612,1256">also have the same rate of growth..</WORD>
          </LINE>
          <LINE>
            <WORD coords="81,1382,1619,1350">As an example, let us assume that f(n) = 1On + n is the expression. Then, its tight upper bound</WORD>
          </LINE>
          <LINE>
            <WORD coords="72,1437,1076,1389">g(n) is O(n). The rate of growth in the best case is g(n) = O(n)..</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,1522,1617,1490">In this case, the rates of growth in the best case and worst case are the same. As a result, the</WORD>
          </LINE>
          <LINE>
            <WORD coords="74,1572,1624,1533">average case will also be the same. For a given function (algorithm), if the rates of growth.</WORD>
          </LINE>
          <LINE>
            <WORD coords="74,1616,1617,1579">(bounds) for O and  are not the same, then the rate of growth for the  case may not be the same.</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,1661,1619,1629">In this case, we need to consider all possible time complexities and take the average of those (for</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,1712,1153,1673">example, for a quick sort average case, refer to the Sorting chapter).</WORD>
          </LINE>
          <LINE>
            <WORD coords="74,1801,1619,1762">Now consider the definition of O notation. It is defined as O(g(n)) = {f(n): there exist positive.</WORD>
          </LINE>
          <LINE>
            <WORD coords="74,1847,1619,1813">constants C1,C and no such that O  cig(n)  f(n)  cg(n) for all n  no}. g(n) is an asymptotic</WORD>
          </LINE>
          <LINE>
            <WORD coords="72,1904,1478,1861">tight bound for f(n). O(g(n)) is the set of functions with the same order of growth as g(n)..</WORD>
          </LINE>
          <LINE>
            <WORD coords="74,2030,317,1987">O Examples</WORD>
          </LINE>
        </PARAGRAPH>
      </REGION>
    </PAGECOLUMN>
  </HIDDENTEXT>
</OBJECT>
