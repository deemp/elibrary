<?xml version='1.0' encoding='UTF-8'?>
<OBJECT>
  <HIDDENTEXT>
    <PAGECOLUMN>
      <REGION>
        <PARAGRAPH>
          <LINE>
            <WORD coords="92,146,370,97">Time Complexity</WORD>
          </LINE>
          <LINE>
            <WORD coords="402,147,508,96">Name</WORD>
          </LINE>
          <LINE>
            <WORD coords="757,146,913,97">Example</WORD>
          </LINE>
          <LINE>
            <WORD coords="210,234,252,183">1</WORD>
          </LINE>
          <LINE>
            <WORD coords="404,234,566,183">Constant</WORD>
          </LINE>
          <LINE>
            <WORD coords="767,231,1506,186">Adding an element to the front of a linked list</WORD>
          </LINE>
          <LINE>
            <WORD coords="192,312,275,259">logn</WORD>
          </LINE>
          <LINE>
            <WORD coords="404,307,607,259">Logarithmic</WORD>
          </LINE>
          <LINE>
            <WORD coords="762,302,1363,264">Finding an element in a sorted array</WORD>
          </LINE>
          <LINE>
            <WORD coords="212,385,252,339">n</WORD>
          </LINE>
          <LINE>
            <WORD coords="404,385,520,332">Linear</WORD>
          </LINE>
          <LINE>
            <WORD coords="762,380,1425,337">Finding an element in an unsorted array</WORD>
          </LINE>
          <LINE>
            <WORD coords="182,461,284,410">nlogn</WORD>
          </LINE>
          <LINE>
            <WORD coords="404,456,735,410">Linear Logarithmic</WORD>
          </LINE>
          <LINE>
            <WORD coords="762,456,1605,413">Sorting n items by divide-and-conquer'-Mergesort</WORD>
          </LINE>
          <LINE>
            <WORD coords="203,522,259,470">n2</WORD>
          </LINE>
          <LINE>
            <WORD coords="407,520,575,472">Quadratic</WORD>
          </LINE>
          <LINE>
            <WORD coords="764,516,1478,477">Shortest path between two nodes in a graph</WORD>
          </LINE>
          <LINE>
            <WORD coords="203,591,259,534">n3</WORD>
          </LINE>
          <LINE>
            <WORD coords="404,589,510,536">Cubic</WORD>
          </LINE>
          <LINE>
            <WORD coords="765,587,1109,541">Matrix Multiplication</WORD>
          </LINE>
          <LINE>
            <WORD coords="206,667,259,612">2n</WORD>
          </LINE>
          <LINE>
            <WORD coords="404,669,610,614">Exponential</WORD>
          </LINE>
          <LINE>
            <WORD coords="765,665,1240,619">The Towers of Hanoi problem</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,825,510,777">1.12 Types of Analysis</WORD>
          </LINE>
          <LINE>
            <WORD coords="79,912,1619,880">To analyze the given algorithm, we need to know with which inputs the algorithm takes less time</WORD>
          </LINE>
          <LINE>
            <WORD coords="74,963,1621,921">(performing wel1) and with which inputs the algorithm takes a long time. We have already seen</WORD>
          </LINE>
          <LINE>
            <WORD coords="79,1006,1619,974">that an algorithm can be represented in the form of an expression. That means we represent the</WORD>
          </LINE>
          <LINE>
            <WORD coords="74,1054,1621,1013">algorithm with multiple expressions: one for the case where it takes less time and another for the</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,1098,554,1066">case where it takes more time.</WORD>
          </LINE>
          <LINE>
            <WORD coords="74,1194,1621,1153">In general, the first case is called the best case and the second case is called the worst case for</WORD>
          </LINE>
          <LINE>
            <WORD coords="76,1240,1621,1199">the algorithm. To analyze an algorithm we need some kind of syntax, and that forms the base for</WORD>
          </LINE>
          <LINE>
            <WORD coords="79,1283,1065,1251">asymptotic analysis/notation. There are three types of analysis:</WORD>
          </LINE>
          <LINE>
            <WORD coords="274,1352,469,1316">Worst case</WORD>
          </LINE>
          <LINE>
            <WORD coords="492,1400,1621,1361">Defines the input for which the algorithm takes a long time (slowest</WORD>
          </LINE>
          <LINE>
            <WORD coords="506,1446,797,1407">time to complete).</WORD>
          </LINE>
          <LINE>
            <WORD coords="397,1490,430,1455">0</WORD>
          </LINE>
          <LINE>
            <WORD coords="492,1487,1379,1455">Input is the one for which the algorithm runs the slowest..</WORD>
          </LINE>
          <LINE>
            <WORD coords="274,1535,444,1499">Best case</WORD>
          </LINE>
          <LINE>
            <WORD coords="492,1584,1619,1545">Defines the input for which the algorithm takes the least time (fastest</WORD>
          </LINE>
          <LINE>
            <WORD coords="508,1627,795,1595">time to complete).</WORD>
          </LINE>
          <LINE>
            <WORD coords="395,1673,430,1639">0</WORD>
          </LINE>
          <LINE>
            <WORD coords="490,1673,1358,1634">Input is the one for which the algorithm runs the fastest</WORD>
          </LINE>
          <LINE>
            <WORD coords="279,1721,508,1682">Average case</WORD>
          </LINE>
          <LINE>
            <WORD coords="395,1765,430,1730">0</WORD>
          </LINE>
          <LINE>
            <WORD coords="494,1765,1455,1732">Provides a prediction about the running time of the algorithm.</WORD>
          </LINE>
          <LINE>
            <WORD coords="490,1813,1622,1776">Run the algorithm many times, using many different inputs that come</WORD>
          </LINE>
          <LINE>
            <WORD coords="506,1859,1619,1822">from some distribution that generates these inputs, compute the total</WORD>
          </LINE>
          <LINE>
            <WORD coords="506,1907,1621,1868">running time (by adding the individual times), and divide by the</WORD>
          </LINE>
          <LINE>
            <WORD coords="508,1948,767,1916">number of trials.</WORD>
          </LINE>
          <LINE>
            <WORD coords="402,1989,425,1964">O</WORD>
          </LINE>
          <LINE>
            <WORD coords="492,1998,1019,1959">Assumes that the input is random.</WORD>
          </LINE>
          <LINE>
            <WORD coords="448,2083,1252,2042">Lower Bound &lt;= Average Time = Upper Bound</WORD>
          </LINE>
        </PARAGRAPH>
      </REGION>
    </PAGECOLUMN>
  </HIDDENTEXT>
</OBJECT>
