<?xml version='1.0' encoding='UTF-8'?>
<OBJECT>
  <HIDDENTEXT>
    <PAGECOLUMN>
      <REGION>
        <PARAGRAPH>
          <LINE>
            <WORD coords="197,176,999,154">it is retrieved, or how many database tables must be queried to get</WORD>
          </LINE>
          <LINE>
            <WORD coords="196,212,304,188">the data.</WORD>
          </LINE>
          <LINE>
            <WORD coords="197,266,998,236">Once the customer screen receives a request to get customer infor-</WORD>
          </LINE>
          <LINE>
            <WORD coords="201,300,999,274">mation for a particular individual, it then forwards that request to</WORD>
          </LINE>
          <LINE>
            <WORD coords="201,336,999,309">the customer delegate module in the presentation layer. This module</WORD>
          </LINE>
          <LINE>
            <WORD coords="197,373,1001,341">is responsible for knowing which modules in the business layer can</WORD>
          </LINE>
          <LINE>
            <WORD coords="201,405,1001,379">process that request, and also how to get to that module and what</WORD>
          </LINE>
          <LINE>
            <WORD coords="201,441,999,414">data it needs (the contract).The customer object in the business layer</WORD>
          </LINE>
          <LINE>
            <WORD coords="197,480,1001,448">is responsible for aggregating all of the information needed by the</WORD>
          </LINE>
          <LINE>
            <WORD coords="197,508,887,484">business request (in this case to get customer information).</WORD>
          </LINE>
          <LINE>
            <WORD coords="201,561,998,534">Next, the customer object module invokes the customer DAO (data</WORD>
          </LINE>
          <LINE>
            <WORD coords="199,598,997,572">access object) module in the persistence layer to get customer data</WORD>
          </LINE>
          <LINE>
            <WORD coords="195,634,1001,604">and the order DAO module to get order information. These modules</WORD>
          </LINE>
          <LINE>
            <WORD coords="199,668,999,641">in turn execute SQL statements to retrieve the corresponding data</WORD>
          </LINE>
          <LINE>
            <WORD coords="201,703,999,677">and pass it back up to the customer object in the business layer.</WORD>
          </LINE>
          <LINE>
            <WORD coords="197,741,1001,709">Once the customer object receives the data, it aggregates the data</WORD>
          </LINE>
          <LINE>
            <WORD coords="199,772,997,746">and passes that information back up to the customer delegate, which</WORD>
          </LINE>
          <LINE>
            <WORD coords="201,808,999,782">then passes that data to the customer screen to be presented to the</WORD>
          </LINE>
          <LINE>
            <WORD coords="198,839,256,818">user.</WORD>
          </LINE>
          <LINE>
            <WORD coords="197,926,679,883">Considerations and Analysis.</WORD>
          </LINE>
          <LINE>
            <WORD coords="197,981,1001,953">The layered architecture is a well-understood and general-purpose</WORD>
          </LINE>
          <LINE>
            <WORD coords="199,1016,996,990">architecture style, making it a good starting point for most applica-</WORD>
          </LINE>
          <LINE>
            <WORD coords="199,1052,999,1026">tions, particularly when you are not sure what architecture style</WORD>
          </LINE>
          <LINE>
            <WORD coords="195,1087,1003,1058">is best suited for your application.However, there are a couple of</WORD>
          </LINE>
          <LINE>
            <WORD coords="197,1123,1001,1093">things to consider from an architecture standpoint before choosing</WORD>
          </LINE>
          <LINE>
            <WORD coords="199,1157,309,1131">this style.</WORD>
          </LINE>
          <LINE>
            <WORD coords="199,1208,994,1181">The first thing to watch out for is what is known as the architec</WORD>
          </LINE>
          <LINE>
            <WORD coords="201,1243,999,1217">ture sinkhole anti-pattern. This anti-pattern describes the situation</WORD>
          </LINE>
          <LINE>
            <WORD coords="199,1316,1001,1284">simple pass-through processing with little or no logic performed</WORD>
          </LINE>
          <LINE>
            <WORD coords="201,1348,999,1322">within each layer. For example, assume that the presentation layer</WORD>
          </LINE>
          <LINE>
            <WORD coords="201,1384,999,1357">responds to a request from the user to retrieve customer data.The</WORD>
          </LINE>
          <LINE>
            <WORD coords="201,1419,998,1393">presentation layer passes the request to the business layer, which</WORD>
          </LINE>
          <LINE>
            <WORD coords="199,1453,999,1427">simply passes the request to the persistence layer, which then makes</WORD>
          </LINE>
          <LINE>
            <WORD coords="195,1489,1001,1459">a simple SQL call to the database layer to retrieve the customer</WORD>
          </LINE>
          <LINE>
            <WORD coords="197,1524,1001,1494">data. The data is then passed all the way back up the stack with no</WORD>
          </LINE>
          <LINE>
            <WORD coords="197,1566,1003,1528">additional processing or logic to aggregate, calculate, or transform</WORD>
          </LINE>
          <LINE>
            <WORD coords="196,1589,301,1568">the data.</WORD>
          </LINE>
          <LINE>
            <WORD coords="696,1686,1003,1661">Considerations and Analysis21</WORD>
          </LINE>
        </PARAGRAPH>
      </REGION>
    </PAGECOLUMN>
  </HIDDENTEXT>
</OBJECT>
