[[[[[202.0, 150.0], [996.0, 150.0], [996.0, 176.0], [202.0, 176.0]], ["the domain component. Notice, that the third node of the name", 0.9590499997138977]], [[[199.0, 189.0], [999.0, 187.0], [999.0, 214.0], [199.0, 216.0]], ["space (customer) is duplicated for all of the layers-this is indicative", 0.964708149433136]], [[[201.0, 225.0], [999.0, 225.0], [999.0, 251.0], [201.0, 251.0]], ["of a technically partitioned architecture, where the domain is spread", 0.9817595481872559]], [[[199.0, 259.0], [606.0, 259.0], [606.0, 283.0], [199.0, 283.0]], ["across all layers of the architecture.", 0.9808483123779297]], [[[201.0, 311.0], [998.0, 311.0], [998.0, 336.0], [201.0, 336.0]], ["One of the powerful features of the layered architecture style is the", 0.9611755609512329]], [[[201.0, 347.0], [999.0, 347.0], [999.0, 373.0], [201.0, 373.0]], ["separation of concerns among components. Components within a", 0.9783571362495422]], [[[199.0, 416.0], [997.0, 416.0], [997.0, 442.0], [199.0, 442.0]], ["example, components in the presentation layer deal only with pre-", 0.9576281309127808]], [[[201.0, 452.0], [999.0, 452.0], [999.0, 478.0], [201.0, 478.0]], ["sentation logic, whereas components residing in the business layer", 0.9807018041610718]], [[[197.0, 482.0], [1001.0, 484.0], [1001.0, 516.0], [197.0, 514.0]], ["deal only with business logic. This type of component classification", 0.9814776182174683]], [[[201.0, 521.0], [999.0, 521.0], [999.0, 547.0], [201.0, 547.0]], ["makes it easy to build effective roles and responsibility models", 0.9723407030105591]], [[[195.0, 551.0], [999.0, 555.0], [999.0, 587.0], [195.0, 583.0]], ["into your architecture, and makes it easy to develop, test, govern,", 0.9669572114944458]], [[[199.0, 591.0], [992.0, 591.0], [992.0, 617.0], [199.0, 617.0]], ["and maintain applications using this architecture style when well", 0.9748399257659912]], [[[201.0, 626.0], [996.0, 626.0], [996.0, 652.0], [201.0, 652.0]], ["defined component interfaces and contracts are used between layers.", 0.982069194316864]], [[[197.0, 692.0], [428.0, 696.0], [427.0, 741.0], [197.0, 737.0]], ["Key Concepts", 0.9977014064788818]], [[[199.0, 763.0], [999.0, 763.0], [999.0, 789.0], [199.0, 789.0]], ["In this architecture style, layers can be either open or closed.Notice", 0.9760388135910034]], [[[195.0, 795.0], [1001.0, 799.0], [1001.0, 831.0], [195.0, 827.0]], ["in Figure 3-2 that each layer in the architecture is marked as being", 0.9901518821716309]], [[[197.0, 831.0], [1001.0, 833.0], [1001.0, 864.0], [197.0, 862.0]], ["closed. A closed layer means that as a request moves from layer to", 0.9820192456245422]], [[[201.0, 870.0], [999.0, 870.0], [999.0, 896.0], [201.0, 896.0]], ["layer, it must go through the layer right below it to get to the next", 0.932948112487793]], [[[199.0, 906.0], [999.0, 906.0], [999.0, 932.0], [199.0, 932.0]], ["layer below that one. For example, a request originating from the", 0.9598256945610046]], [[[201.0, 941.0], [999.0, 941.0], [999.0, 968.0], [201.0, 968.0]], ["presentation layer must first go through the business layer and then", 0.9740684628486633]], [[[199.0, 975.0], [930.0, 975.0], [930.0, 1001.0], [199.0, 1001.0]], ["to the persistence layer before finally hitting the database layer.", 0.9740334153175354]], [[[199.0, 1026.0], [999.0, 1026.0], [999.0, 1052.0], [199.0, 1052.0]], ["So why not allow the presentation layer direct access to either the", 0.9699834585189819]], [[[201.0, 1061.0], [999.0, 1061.0], [999.0, 1087.0], [201.0, 1087.0]], ["persistence layer or database layer? After all, direct database access", 0.9711799621582031]], [[[201.0, 1097.0], [999.0, 1097.0], [999.0, 1123.0], [201.0, 1123.0]], ["from the presentation layer is much faster than going through a", 0.9722038507461548]], [[[199.0, 1129.0], [998.0, 1131.0], [997.0, 1157.0], [199.0, 1155.0]], ["bunch of unnecessary layers just to retrieve or save database infor-", 0.9595435857772827]], [[[197.0, 1164.0], [1001.0, 1168.0], [1001.0, 1194.0], [197.0, 1191.0]], ["mation. The answer to this question lies in a key concept known as", 0.9615554213523865]], [[[201.0, 1202.0], [405.0, 1202.0], [405.0, 1228.0], [201.0, 1228.0]], ["layers of isolation.", 0.9729195833206177]], [[[199.0, 1247.0], [1001.0, 1251.0], [1001.0, 1283.0], [199.0, 1279.0]], ["The layers of isolation concept means that changes made in one", 0.961549699306488]], [[[201.0, 1288.0], [999.0, 1288.0], [999.0, 1314.0], [201.0, 1314.0]], ["layer of the architecture generally don't impact or affect components", 0.9900807738304138]], [[[199.0, 1324.0], [999.0, 1324.0], [999.0, 1350.0], [199.0, 1350.0]], ["in other layers: the change is isolated to the components within that", 0.9695641398429871]], [[[201.0, 1359.0], [1001.0, 1359.0], [1001.0, 1384.0], [201.0, 1384.0]], ["layer, and possibly another associated layer such as a persistence", 0.956098735332489]], [[[201.0, 1393.0], [999.0, 1393.0], [999.0, 1419.0], [201.0, 1419.0]], ["layer containing SQL).If you allow the presentation layer direct", 0.9589501619338989]], [[[199.0, 1429.0], [999.0, 1429.0], [999.0, 1455.0], [199.0, 1455.0]], ["access to the persistence layer, then changes made to SQL within", 0.9463833570480347]], [[[201.0, 1464.0], [999.0, 1464.0], [999.0, 1489.0], [201.0, 1489.0]], ["the persistence layer would impact both the business layer and the", 0.9588693976402283]], [[[199.0, 1496.0], [999.0, 1496.0], [999.0, 1528.0], [199.0, 1528.0]], ["presentation layer, thereby producing a very tightly coupled applica-", 0.9905268549919128]], [[[197.0, 1532.0], [1001.0, 1532.0], [1001.0, 1564.0], [197.0, 1564.0]], ["tion with lots of interdependencies between components. This type", 0.9916156530380249]], [[[810.0, 1660.0], [1005.0, 1655.0], [1005.0, 1687.0], [810.0, 1691.0]], ["Key Concepts|17", 0.9575886130332947]]]]