[[[[[201.0, 152.0], [996.0, 152.0], [996.0, 178.0], [201.0, 178.0]], ["Because the layered architecture is a technically partitioned archi-", 0.9930313229560852]], [[[195.0, 186.0], [1001.0, 184.0], [1001.0, 216.0], [195.0, 218.0]], ["tecture, it's a good fit if the team structure is also technically.", 0.9606090784072876]], [[[197.0, 219.0], [999.0, 221.0], [999.0, 253.0], [197.0, 251.0]], ["partitioned. In other words, if your overall team structure is organ-", 0.9601329565048218]], [[[199.0, 259.0], [997.0, 259.0], [997.0, 285.0], [199.0, 285.0]], ["ized as teams of presentation (UI) developers, backend developers,", 0.9732493758201599]], [[[199.0, 291.0], [999.0, 293.0], [999.0, 319.0], [199.0, 317.0]], ["shared services teams, database teams, and so on, this aligns wel", 0.9487577080726624]], [[[199.0, 328.0], [999.0, 328.0], [999.0, 354.0], [199.0, 354.0]], ["to the overall partitioning of this architecture style (presentation", 0.9713981747627258]], [[[201.0, 364.0], [1001.0, 364.0], [1001.0, 390.0], [201.0, 390.0]], ["layer, business layer, persistence layer, and so on). This alignment is", 0.9700601100921631]], [[[199.0, 399.0], [489.0, 399.0], [489.0, 426.0], [199.0, 426.0]], ["known as Conway's Law.", 0.9780687689781189]], [[[195.0, 459.0], [656.0, 461.0], [656.0, 499.0], [195.0, 497.0]], ["When Not to Consider This Style", 0.9810675382614136]], [[[199.0, 521.0], [1001.0, 521.0], [1001.0, 553.0], [199.0, 553.0]], ["While there are good reasons to consider the layered architecture", 0.9655641913414001]], [[[199.0, 559.0], [1001.0, 559.0], [1001.0, 585.0], [199.0, 585.0]], ["as described in the prior section, unfortunately there are even more", 0.9577775001525879]], [[[199.0, 594.0], [759.0, 594.0], [759.0, 621.0], [199.0, 621.0]], ["reasons not to consider the layered architecture.", 0.9787241220474243]], [[[197.0, 639.0], [1001.0, 641.0], [1001.0, 673.0], [197.0, 671.0]], ["The first reason not to consider the layered architecture is if you", 0.9680330753326416]], [[[197.0, 714.0], [994.0, 716.0], [994.0, 743.0], [197.0, 741.0]], ["scalability, elasticity, fault tolerance, and performance. Because lay", 0.9684252142906189]], [[[197.0, 748.0], [999.0, 750.0], [999.0, 776.0], [197.0, 774.0]], ["ered architectures lend themselves toward a monolithic architecture,", 0.9854636192321777]], [[[201.0, 786.0], [998.0, 786.0], [998.0, 812.0], [201.0, 812.0]], ["applications built using this architecture style are generally difficult", 0.9842906594276428]], [[[199.0, 819.0], [994.0, 819.0], [994.0, 846.0], [199.0, 846.0]], ["to scale.While the layered architecture can sometimes scale by split", 0.977752149105072]], [[[197.0, 851.0], [1001.0, 853.0], [1001.0, 885.0], [197.0, 883.0]], ["ting the layers into separate physical deployments and/or creating", 0.9672239422798157]], [[[202.0, 891.0], [1001.0, 891.0], [1001.0, 917.0], [202.0, 917.0]], ["separate instances of the application in multiple virtual machines, it", 0.9946553707122803]], [[[199.0, 926.0], [994.0, 926.0], [994.0, 952.0], [199.0, 952.0]], ["becomes very expensive and inefficient because 1o0% of the applica", 0.9679238200187683]], [[[201.0, 960.0], [1001.0, 960.0], [1001.0, 986.0], [201.0, 986.0]], ["tion functionality must scale. In addition, the layered architecture is", 0.9923115968704224]], [[[201.0, 996.0], [999.0, 996.0], [999.0, 1022.0], [201.0, 1022.0]], ["not very fault-tolerant a fatal crash in any part of the application", 0.9657728672027588]], [[[199.0, 1031.0], [761.0, 1031.0], [761.0, 1058.0], [199.0, 1058.0]], ["brings down the entire application functionality.", 0.9846773147583008]], [[[201.0, 1080.0], [998.0, 1082.0], [997.0, 1108.0], [201.0, 1106.0]], ["Another reason to avoid the layered architecture is when a major-", 0.9599130749702454]], [[[199.0, 1118.0], [999.0, 1118.0], [999.0, 1144.0], [199.0, 1144.0]], ["ity of your changes are at a domain level rather than a technical", 0.9540900588035583]], [[[201.0, 1153.0], [999.0, 1153.0], [999.0, 1179.0], [201.0, 1179.0]], ["one.Suppose you are tasked with adding an expiration date to the", 0.9529235363006592]], [[[197.0, 1183.0], [1001.0, 1185.0], [1001.0, 1217.0], [197.0, 1215.0]], ["customer's \"My Movie List within a movie streaming application", 0.9719225168228149]], [[[201.0, 1222.0], [999.0, 1222.0], [999.0, 1249.0], [201.0, 1249.0]], ["(movies a customer has queued up to watch later). This new feature", 0.9560918807983398]], [[[197.0, 1256.0], [999.0, 1258.0], [999.0, 1284.0], [197.0, 1282.0]], ["would first require a change to the database schema, then a change", 0.9907476305961609]], [[[199.0, 1292.0], [999.0, 1292.0], [999.0, 1318.0], [199.0, 1318.0]], ["to the SQL in the persistence layer, then a change to the business", 0.9407525062561035]], [[[201.0, 1327.0], [999.0, 1327.0], [999.0, 1354.0], [201.0, 1354.0]], ["rules and contracts in the business layer (such as how long before", 0.9516130685806274]], [[[201.0, 1363.0], [999.0, 1363.0], [999.0, 1389.0], [201.0, 1389.0]], ["expiration, what to do when a movie in your list expires, and so", 0.9461908340454102]], [[[199.0, 1397.0], [999.0, 1397.0], [999.0, 1423.0], [199.0, 1423.0]], ["on), and finally a change to the presentation layer to display the", 0.9443290829658508]], [[[201.0, 1432.0], [716.0, 1432.0], [716.0, 1459.0], [201.0, 1459.0]], ["expiration date beside each movie in the list.", 0.9881787300109863]], [[[197.0, 1481.0], [999.0, 1479.0], [999.0, 1511.0], [197.0, 1513.0]], ["In analyzing this relatively simple change to the My Movie List", 0.97657710313797]], [[[199.0, 1521.0], [997.0, 1521.0], [997.0, 1547.0], [199.0, 1547.0]], ["functionality, notice how every layer of the architecture is impacted", 0.9658772349357605]], [[[696.0, 1661.0], [1003.0, 1661.0], [1003.0, 1688.0], [696.0, 1688.0]], ["Considerations and Analysis23", 0.9857677817344666]]]]