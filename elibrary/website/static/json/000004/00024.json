[[[[[79.0, 82.0], [1621.0, 82.0], [1621.0, 115.0], [79.0, 115.0]], ["For a given algorithm, we can represent the best, worst and average cases in the form of", 0.951754629611969]], [[[74.0, 128.0], [1485.0, 126.0], [1485.0, 165.0], [74.0, 167.0]], ["expressions. As an example, let f(n) be the function which represents the given algorithm..", 0.9874110221862793]], [[[638.0, 220.0], [1062.0, 220.0], [1062.0, 266.0], [638.0, 266.0]], ["fn=n+500,for worst case", 0.9750601649284363]], [[[79.0, 380.0], [1619.0, 380.0], [1619.0, 419.0], [79.0, 419.0]], ["Similarly for the average case. The expression defines the inputs with which the algorithm takes", 0.9943327903747559]], [[[76.0, 426.0], [670.0, 426.0], [670.0, 465.0], [76.0, 465.0]], ["the average running time (or memory)", 0.9990333914756775]], [[[74.0, 566.0], [584.0, 568.0], [584.0, 614.0], [74.0, 612.0]], ["1.13 Asymptotic Notation", 0.9863956570625305]], [[[76.0, 667.0], [1621.0, 667.0], [1621.0, 706.0], [76.0, 706.0]], ["Having the expressions for the best, average and worst cases, for all three cases we need to", 0.9735192060470581]], [[[76.0, 713.0], [1621.0, 713.0], [1621.0, 752.0], [76.0, 752.0]], ["identify the upper and lower bounds. To represent these upper and lower bounds, we need some.", 0.9929148554801941]], [[[79.0, 763.0], [1619.0, 763.0], [1619.0, 795.0], [79.0, 795.0]], ["kind of syntax, and that is the subject of the following discussion. Let us assume that the given", 0.9621756672859192]], [[[74.0, 804.0], [892.0, 807.0], [892.0, 846.0], [74.0, 843.0]], ["algorithm is represented in the form of function f(n)", 0.9867096543312073]], [[[76.0, 942.0], [1051.0, 944.0], [1051.0, 990.0], [76.0, 988.0]], ["1.14 Big-O Notation [Upper Bounding Function]", 0.9928750991821289]], [[[76.0, 1043.0], [1619.0, 1043.0], [1619.0, 1082.0], [76.0, 1082.0]], ["This notation gives the tight upper bound of the given function. Generally, it is represented as f(n)", 0.9831051230430603]], [[[74.0, 1086.0], [1619.0, 1091.0], [1619.0, 1130.0], [74.0, 1125.0]], ["= O(g(n)). That means, at larger values of n, the upper bound of f(n) is g(n). For example, if f(n)", 0.9797475934028625]], [[[72.0, 1134.0], [1622.0, 1139.0], [1621.0, 1185.0], [72.0, 1180.0]], ["= n4 + 100n2 + 10n + 50 is the given algorithm, then n4 is g(n). That means g(n) gives the.", 0.9666334986686707]], [[[76.0, 1192.0], [917.0, 1192.0], [917.0, 1224.0], [76.0, 1224.0]], ["maximum rate of growth for f(n)at larger values of n", 0.9554345607757568]], [[[76.0, 1274.0], [425.0, 1274.0], [425.0, 1313.0], [76.0, 1313.0]], ["Rate of Growth", 0.9473758339881897]], [[[956.0, 1281.0], [1093.0, 1281.0], [1093.0, 1341.0], [956.0, 1341.0]], ["cg(n)", 0.9410251379013062]], [[[1300.0, 1359.0], [1414.0, 1359.0], [1414.0, 1421.0], [1300.0, 1421.0]], ["f(n)", 0.8954862356185913]], [[[527.0, 1923.0], [545.0, 1923.0], [545.0, 1955.0], [527.0, 1955.0]], ["-", 0.8297935724258423]], [[[1317.0, 2008.0], [1624.0, 2008.0], [1624.0, 2053.0], [1317.0, 2053.0]], ["Input Size,n", 0.9515113234519958]], [[[501.0, 2035.0], [563.0, 2046.0], [555.0, 2094.0], [492.0, 2083.0]], ["no", 0.9572229385375977]]]]