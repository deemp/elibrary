[[[[[81.0, 87.0], [885.0, 87.0], [885.0, 119.0], [81.0, 119.0]], ["1.16 Theta-O Notation [Order Function].", 0.9624730348587036]], [[[76.0, 174.0], [427.0, 174.0], [427.0, 213.0], [76.0, 213.0]], ["Rate of Growth", 0.9465341567993164]], [[[956.0, 250.0], [1100.0, 245.0], [1102.0, 295.0], [958.0, 301.0]], ["c2g(n)", 0.821753203868866]], [[[959.0, 374.0], [1069.0, 374.0], [1069.0, 433.0], [959.0, 433.0]], ["f(n)", 0.9215583205223083]], [[[1305.0, 536.0], [1453.0, 536.0], [1453.0, 594.0], [1305.0, 594.0]], ["c1g(n)", 0.9042184352874756]], [[[547.0, 910.0], [564.0, 910.0], [564.0, 937.0], [547.0, 937.0]], ["-", 0.8956810832023621]], [[[1317.0, 997.0], [1624.0, 997.0], [1624.0, 1043.0], [1317.0, 1043.0]], ["Input Size,n", 0.9549707770347595]], [[[510.0, 1024.0], [573.0, 1024.0], [573.0, 1072.0], [510.0, 1072.0]], ["no", 0.977430522441864]], [[[76.0, 1116.0], [1621.0, 1116.0], [1621.0, 1155.0], [76.0, 1155.0]], ["This notation decides whether the upper and lower bounds of a given function (algorithm) are the", 0.9949712753295898]], [[[72.0, 1162.0], [1624.0, 1164.0], [1624.0, 1203.0], [72.0, 1201.0]], ["same. The average running time of an algorithm is always between the lower bound and the upper.", 0.9826869964599609]], [[[69.0, 1203.0], [1624.0, 1205.0], [1624.0, 1251.0], [69.0, 1249.0]], ["bound. If the upper bound (O) and lower bound (Q) give the same result, then the O notation will.", 0.991942822933197]], [[[76.0, 1256.0], [612.0, 1256.0], [612.0, 1295.0], [76.0, 1295.0]], ["also have the same rate of growth..", 0.9630370140075684]], [[[81.0, 1350.0], [1619.0, 1350.0], [1619.0, 1382.0], [81.0, 1382.0]], ["As an example, let us assume that f(n) = 1On + n is the expression. Then, its tight upper bound", 0.9302405118942261]], [[[72.0, 1391.0], [1076.0, 1389.0], [1076.0, 1435.0], [72.0, 1437.0]], ["g(n) is O(n). The rate of growth in the best case is g(n) = O(n)..", 0.9783124923706055]], [[[76.0, 1490.0], [1617.0, 1490.0], [1617.0, 1522.0], [76.0, 1522.0]], ["In this case, the rates of growth in the best case and worst case are the same. As a result, the", 0.957070529460907]], [[[74.0, 1533.0], [1624.0, 1533.0], [1624.0, 1572.0], [74.0, 1572.0]], ["average case will also be the same. For a given function (algorithm), if the rates of growth.", 0.9818106889724731]], [[[74.0, 1577.0], [1617.0, 1579.0], [1617.0, 1618.0], [74.0, 1616.0]], ["(bounds) for O and  are not the same, then the rate of growth for the  case may not be the same.", 0.9683330655097961]], [[[76.0, 1629.0], [1619.0, 1629.0], [1619.0, 1661.0], [76.0, 1661.0]], ["In this case, we need to consider all possible time complexities and take the average of those (for", 0.9748511910438538]], [[[76.0, 1673.0], [1153.0, 1673.0], [1153.0, 1712.0], [76.0, 1712.0]], ["example, for a quick sort average case, refer to the Sorting chapter).", 0.9941924810409546]], [[[74.0, 1760.0], [1619.0, 1762.0], [1619.0, 1804.0], [74.0, 1801.0]], ["Now consider the definition of O notation. It is defined as O(g(n)) = {f(n): there exist positive.", 0.9670488238334656]], [[[74.0, 1808.0], [1619.0, 1813.0], [1619.0, 1852.0], [74.0, 1847.0]], ["constants C1,C and no such that O  cig(n)  f(n)  cg(n) for all n  no}. g(n) is an asymptotic", 0.9349574446678162]], [[[72.0, 1859.0], [1478.0, 1861.0], [1478.0, 1907.0], [72.0, 1904.0]], ["tight bound for f(n). O(g(n)) is the set of functions with the same order of growth as g(n)..", 0.9893254041671753]], [[[75.0, 1982.0], [317.0, 1987.0], [316.0, 2035.0], [74.0, 2030.0]], ["O Examples", 0.9475940465927124]]]]